{"ast":null,"code":"import { HostEvent } from '../types';\n/**\n * Reloads the ThoughtSpot iframe.\n */\n\nfunction reload(iFrame) {\n  const oldFrame = iFrame.cloneNode();\n  const parent = iFrame.parentNode;\n  parent.removeChild(iFrame);\n  parent.appendChild(oldFrame);\n}\n/**\n * Post Iframe message.\n */\n\n\nfunction postIframeMessage(iFrame, message, thoughtSpotHost) {\n  return iFrame.contentWindow.postMessage(message, thoughtSpotHost);\n}\n\nexport function processTrigger(iFrame, messageType, thoughtSpotHost, data) {\n  switch (messageType) {\n    case HostEvent.Reload:\n      return reload(iFrame);\n\n    default:\n      return postIframeMessage(iFrame, {\n        type: messageType,\n        data\n      }, thoughtSpotHost);\n  }\n}","map":{"version":3,"sources":["C:\\Users\\NathanSchroeder\\Documents\\Dev\\IntegrationEnvironment\\frontend\\node_modules\\@thoughtspot\\visual-embed-sdk\\src\\utils\\processTrigger.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,UAA1B;AAEA;;AAEG;;AACH,SAAS,MAAT,CAAgB,MAAhB,EAAyC;AACrC,QAAM,QAAQ,GAAG,MAAM,CAAC,SAAP,EAAjB;AACA,QAAM,MAAM,GAAG,MAAM,CAAC,UAAtB;AACA,EAAA,MAAM,CAAC,WAAP,CAAmB,MAAnB;AACA,EAAA,MAAM,CAAC,WAAP,CAAmB,QAAnB;AACH;AAED;;AAEG;;;AACH,SAAS,iBAAT,CACI,MADJ,EAEI,OAFJ,EAGI,eAHJ,EAG2B;AAEvB,SAAO,MAAM,CAAC,aAAP,CAAqB,WAArB,CAAiC,OAAjC,EAA0C,eAA1C,CAAP;AACH;;AAED,OAAM,SAAU,cAAV,CACF,MADE,EAEF,WAFE,EAGF,eAHE,EAIF,IAJE,EAIO;AAET,UAAQ,WAAR;AACI,SAAK,SAAS,CAAC,MAAf;AACI,aAAO,MAAM,CAAC,MAAD,CAAb;;AACJ;AACI,aAAO,iBAAiB,CACpB,MADoB,EAEpB;AAAE,QAAA,IAAI,EAAE,WAAR;AAAqB,QAAA;AAArB,OAFoB,EAGpB,eAHoB,CAAxB;AAJR;AAUH","sourcesContent":["import { HostEvent } from '../types';\n\n/**\n * Reloads the ThoughtSpot iframe.\n */\nfunction reload(iFrame: HTMLIFrameElement) {\n    const oldFrame = iFrame.cloneNode();\n    const parent = iFrame.parentNode;\n    parent.removeChild(iFrame);\n    parent.appendChild(oldFrame);\n}\n\n/**\n * Post Iframe message.\n */\nfunction postIframeMessage(\n    iFrame: HTMLIFrameElement,\n    message: { type: HostEvent; data: any },\n    thoughtSpotHost: string,\n) {\n    return iFrame.contentWindow.postMessage(message, thoughtSpotHost);\n}\n\nexport function processTrigger(\n    iFrame: HTMLIFrameElement,\n    messageType: HostEvent,\n    thoughtSpotHost: string,\n    data: any,\n) {\n    switch (messageType) {\n        case HostEvent.Reload:\n            return reload(iFrame);\n        default:\n            return postIframeMessage(\n                iFrame,\n                { type: messageType, data },\n                thoughtSpotHost,\n            );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}